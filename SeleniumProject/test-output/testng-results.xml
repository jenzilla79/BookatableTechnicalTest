<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="0" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="196" started-at="2017-06-26T09:44:30Z" finished-at="2017-06-26T09:44:30Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="196" started-at="2017-06-26T09:44:30Z" finished-at="2017-06-26T09:44:30Z">
      <class name="FunctionalTests.bookatable">
        <test-method status="FAIL" signature="setup()[pri:0, instance:FunctionalTests.bookatable@818063]" name="setup" is-config="true" duration-ms="0" started-at="2017-06-26T10:44:30Z" finished-at="2017-06-26T10:44:30Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Users\Jenella\TrainingDay0509\SeleniumProject\Drivers\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\Jenella\TrainingDay0509\SeleniumProject\Drivers\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.chrome.ChromeDriverService.access$0(ChromeDriverService.java:1)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:290)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:116)
	at FunctionalTests.bookatable.setup(bookatable.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:207)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:178)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="verifyLogin()[pri:0, instance:FunctionalTests.bookatable@818063]" name="verifyLogin" duration-ms="1" started-at="2017-06-26T10:44:30Z" finished-at="2017-06-26T10:44:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method status="SKIP" signature="selectMenu()[pri:0, instance:FunctionalTests.bookatable@818063]" name="selectMenu" duration-ms="4" started-at="2017-06-26T10:44:30Z" finished-at="2017-06-26T10:44:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMenu -->
        <test-method status="SKIP" signature="addService()[pri:0, instance:FunctionalTests.bookatable@818063]" name="addService" duration-ms="2" started-at="2017-06-26T10:44:30Z" finished-at="2017-06-26T10:44:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addService -->
        <test-method status="SKIP" signature="createService()[pri:0, instance:FunctionalTests.bookatable@818063]" name="createService" duration-ms="1" started-at="2017-06-26T10:44:30Z" finished-at="2017-06-26T10:44:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createService -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:FunctionalTests.bookatable@818063]" name="teardown" is-config="true" duration-ms="0" started-at="2017-06-26T10:44:30Z" finished-at="2017-06-26T10:44:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- FunctionalTests.bookatable -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
